<?xml version="1.0" encoding="utf-8"?>
<!--
    RelaxVersioner - Git tag/branch based, full-automatic version generator.
    Copyright (c) Kouji Matsui (@kozy_kekyo, @kekyo@mi.kekyo.net)
    
    Licensed under Apache-v2: https://opensource.org/licenses/Apache-2.0
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <_RVB_RuntimeName>dotnet </_RVB_RuntimeName>
    <_RVB_ExecutableName>rv.dll</_RVB_ExecutableName>
    <_RVB_TaskPlatformName>netstandard2.0</_RVB_TaskPlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Full'">
    <_RVB_RuntimeName></_RVB_RuntimeName>
    <_RVB_ExecutableName>rv.exe</_RVB_ExecutableName>
    <!-- TODO: change platform to net40 if using older msbuild -->
    <_RVB_TaskPlatformName>net46</_RVB_TaskPlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Mono'">
    <_RVB_RuntimeName>mono </_RVB_RuntimeName>
    <_RVB_ExecutableName>rv.exe</_RVB_ExecutableName>
    <_RVB_TaskPlatformName>net46</_RVB_TaskPlatformName>
  </PropertyGroup>
    
  <PropertyGroup>
    <_RVB_ScriptBaseDir>$(MSBuildThisFileDirectory)</_RVB_ScriptBaseDir>
    <_RVB_MSBuildTaskPath>$([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)','$(_RVB_TaskPlatformName)','RelaxVersioner.Tasks.dll'))</_RVB_MSBuildTaskPath>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateNuspecDependsOn>
      RelaxVersionerBeforePack;
      $(GenerateNuspecDependsOn)
    </GenerateNuspecDependsOn>
    <GetPackageVersionDependsOn>
      RelaxVersionerBeforePack;
      $(GetPackageVersionDependsOn)
    </GetPackageVersionDependsOn>
  </PropertyGroup>


  <!-- ============================================================================= -->

  <!-- https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-roslyncodetaskfactory?view=vs-2022#provide-backward-compatibility -->
  <Choose>
    <When Condition="'$(MSBuildVersion.Substring(0,2))' &gt;= 16 OR ('$(MSBuildVersion.Substring(0,2))' == 15 AND '$(MSBuildVersion.Substring(3,1))' &gt;= 8)">
      <PropertyGroup>
        <_RVB_TaskFactory>RoslynCodeTaskFactory</_RVB_TaskFactory>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <_RVB_TaskFactory>CodeTaskFactory</_RVB_TaskFactory>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Custom inlined task -->
    
  <UsingTask
    TaskName="_RVB_WriteTextToFile"
    TaskFactory="$(_RVB_TaskFactory)"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <File ParameterType="Microsoft.Build.Framework.ITaskItem" Required="true" />
      <Text ParameterType="System.String" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Text"/>
      <Using Namespace="Microsoft.Build.Framework"/>
      <Code Type="Fragment" Language="cs">
<![CDATA[
        string path = Path.GetFullPath(File.ItemSpec);
        using (Stream fs = new FileStream(path, FileMode.Create, FileAccess.ReadWrite, FileShare.Read))
        {
            TextWriter tw = new StreamWriter(fs, new UTF8Encoding(false));
            string text = Text;
            if (text != null)
            {
                text = text.Replace("\r", "").Replace("\n", "");
            }
            else
            {
                text = "";
            }
            tw.Write(text);
            tw.Flush();
        }
]]>
      </Code>
    </Task>
  </UsingTask>

  <UsingTask
    TaskName="_RVB_CandidateToolingDir"
    TaskFactory="$(_RVB_TaskFactory)"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <ToolingDir ParameterType="Microsoft.Build.Framework.ITaskItem" Required="true" />
      <CandidateDir Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="Microsoft.Build.Framework"/>
      <Code Type="Fragment" Language="cs">
<![CDATA[
        string path = Path.GetFullPath(ToolingDir.ItemSpec);
        if (!Directory.Exists(path))
        {
            string basePath = Path.GetDirectoryName(path);
            path = Path.Combine(basePath, "net9.0");
        }
        CandidateDir = path;
]]>
      </Code>
    </Task>
  </UsingTask>

</Project>
